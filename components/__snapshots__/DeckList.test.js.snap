// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Component] DeckList renders List of Decks correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DeckList
    decks={
      Object {
        "JavaScript": Object {
          "questions": Array [
            Object {
              "answer": "The combination of a function and the lexical environment within which that function was declared.",
              "question": "What is a closure?",
            },
          ],
          "title": "JavaScript",
        },
        "React": Object {
          "questions": Array [
            Object {
              "answer": "A library for managing user interfaces",
              "question": "What is React?",
            },
            Object {
              "answer": "The componentDidMount lifecycle event",
              "question": "Where do you make Ajax requests in React?",
            },
          ],
          "title": "React",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <ScrollView
          onScroll={[Function]}
          scrollEventThrottle={16}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <Component
            style={
              Object {
                "marginTop": 120,
              }
            }
          >
            <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
            >
              <Deck
                deckName="React"
                deckSize={2}
                imageURI={undefined}
              />
            </TouchableOpacity>
            <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
            >
              <Deck
                deckName="JavaScript"
                deckSize={1}
                imageURI={undefined}
              />
            </TouchableOpacity>
          </Component>
        </ScrollView>,
        <AnimatedComponent
          style={
            Array [
              Object {
                "backgroundColor": "#00A4D3",
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "height": 120,
              },
            ]
          }
        >
          <AnimatedComponent
            source={1}
            style={
              Array [
                Object {
                  "height": 120,
                  "left": 0,
                  "position": "absolute",
                  "resizeMode": "cover",
                  "right": 0,
                  "top": 0,
                  "width": null,
                },
                Object {
                  "opacity": 1,
                  "transform": Array [
                    Object {
                      "translateY": 0,
                    },
                  ],
                },
              ]
            }
          />
          <AnimatedComponent
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "height": 32,
                "justifyContent": "center",
                "left": 0,
                "marginTop": 28,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <AnimatedComponent
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#fff",
                    "fontSize": 18,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 0,
                      },
                    ],
                  },
                ]
              }
            >
              Home
            </AnimatedComponent>
          </AnimatedComponent>
          <Component
            style={
              Object {
                "alignSelf": "flex-end",
                "right": 10,
                "top": 10,
              }
            }
          >
            <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
            >
              <Icon
                allowFontScaling={false}
                color="#fff"
                name="delete"
                size={30}
              />
            </TouchableOpacity>
          </Component>
        </AnimatedComponent>,
      ],
      "style": Object {
        "flex": 1,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Component
            style={
              Object {
                "marginTop": 120,
              }
            }
          >
            <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
            >
              <Deck
                deckName="React"
                deckSize={2}
                imageURI={undefined}
              />
            </TouchableOpacity>
            <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
            >
              <Deck
                deckName="JavaScript"
                deckSize={1}
                imageURI={undefined}
              />
            </TouchableOpacity>
          </Component>,
          "onScroll": [Function],
          "scrollEventThrottle": 16,
          "style": Object {
            "flex": 1,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
              >
                <Deck
                  deckName="React"
                  deckSize={2}
                  imageURI={undefined}
                />
              </TouchableOpacity>,
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
              >
                <Deck
                  deckName="JavaScript"
                  deckSize={1}
                  imageURI={undefined}
                />
              </TouchableOpacity>,
            ],
            "style": Object {
              "marginTop": 120,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "React",
              "nodeType": "class",
              "props": Object {
                "activeOpacity": 0.2,
                "children": <Deck
                  deckName="React"
                  deckSize={2}
                  imageURI={undefined}
                />,
                "onPress": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": "React",
                "nodeType": "function",
                "props": Object {
                  "deckName": "React",
                  "deckSize": 2,
                  "imageURI": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "JavaScript",
              "nodeType": "class",
              "props": Object {
                "activeOpacity": 0.2,
                "children": <Deck
                  deckName="JavaScript"
                  deckSize={1}
                  imageURI={undefined}
                />,
                "onPress": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": "JavaScript",
                "nodeType": "function",
                "props": Object {
                  "deckName": "JavaScript",
                  "deckSize": 1,
                  "imageURI": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [MockFunction],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <AnimatedComponent
              source={1}
              style={
                Array [
                  Object {
                    "height": 120,
                    "left": 0,
                    "position": "absolute",
                    "resizeMode": "cover",
                    "right": 0,
                    "top": 0,
                    "width": null,
                  },
                  Object {
                    "opacity": 1,
                    "transform": Array [
                      Object {
                        "translateY": 0,
                      },
                    ],
                  },
                ]
              }
            />,
            <AnimatedComponent
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "height": 32,
                  "justifyContent": "center",
                  "left": 0,
                  "marginTop": 28,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <AnimatedComponent
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#fff",
                      "fontSize": 18,
                    },
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 0,
                        },
                      ],
                    },
                  ]
                }
              >
                Home
              </AnimatedComponent>
            </AnimatedComponent>,
            <Component
              style={
                Object {
                  "alignSelf": "flex-end",
                  "right": 10,
                  "top": 10,
                }
              }
            >
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
              >
                <Icon
                  allowFontScaling={false}
                  color="#fff"
                  name="delete"
                  size={30}
                />
              </TouchableOpacity>
            </Component>,
          ],
          "style": Array [
            Object {
              "backgroundColor": "#00A4D3",
              "left": 0,
              "overflow": "hidden",
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "height": 120,
            },
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "source": 1,
              "style": Array [
                Object {
                  "height": 120,
                  "left": 0,
                  "position": "absolute",
                  "resizeMode": "cover",
                  "right": 0,
                  "top": 0,
                  "width": null,
                },
                Object {
                  "opacity": 1,
                  "transform": Array [
                    Object {
                      "translateY": 0,
                    },
                  ],
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <AnimatedComponent
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#fff",
                      "fontSize": 18,
                    },
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 0,
                        },
                      ],
                    },
                  ]
                }
              >
                Home
              </AnimatedComponent>,
              "style": Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "height": 32,
                "justifyContent": "center",
                "left": 0,
                "marginTop": 28,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Home",
                "style": Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#fff",
                    "fontSize": 18,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 0,
                      },
                    ],
                  },
                ],
              },
              "ref": null,
              "rendered": "Home",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
              >
                <Icon
                  allowFontScaling={false}
                  color="#fff"
                  name="delete"
                  size={30}
                />
              </TouchableOpacity>,
              "style": Object {
                "alignSelf": "flex-end",
                "right": 10,
                "top": 10,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "activeOpacity": 0.2,
                "children": <Icon
                  allowFontScaling={false}
                  color="#fff"
                  name="delete"
                  size={30}
                />,
                "onPress": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "allowFontScaling": false,
                  "color": "#fff",
                  "name": "delete",
                  "size": 30,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <ScrollView
            onScroll={[Function]}
            scrollEventThrottle={16}
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <Component
              style={
                Object {
                  "marginTop": 120,
                }
              }
            >
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
              >
                <Deck
                  deckName="React"
                  deckSize={2}
                  imageURI={undefined}
                />
              </TouchableOpacity>
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
              >
                <Deck
                  deckName="JavaScript"
                  deckSize={1}
                  imageURI={undefined}
                />
              </TouchableOpacity>
            </Component>
          </ScrollView>,
          <AnimatedComponent
            style={
              Array [
                Object {
                  "backgroundColor": "#00A4D3",
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                Object {
                  "height": 120,
                },
              ]
            }
          >
            <AnimatedComponent
              source={1}
              style={
                Array [
                  Object {
                    "height": 120,
                    "left": 0,
                    "position": "absolute",
                    "resizeMode": "cover",
                    "right": 0,
                    "top": 0,
                    "width": null,
                  },
                  Object {
                    "opacity": 1,
                    "transform": Array [
                      Object {
                        "translateY": 0,
                      },
                    ],
                  },
                ]
              }
            />
            <AnimatedComponent
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "height": 32,
                  "justifyContent": "center",
                  "left": 0,
                  "marginTop": 28,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <AnimatedComponent
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#fff",
                      "fontSize": 18,
                    },
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 0,
                        },
                      ],
                    },
                  ]
                }
              >
                Home
              </AnimatedComponent>
            </AnimatedComponent>
            <Component
              style={
                Object {
                  "alignSelf": "flex-end",
                  "right": 10,
                  "top": 10,
                }
              }
            >
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
              >
                <Icon
                  allowFontScaling={false}
                  color="#fff"
                  name="delete"
                  size={30}
                />
              </TouchableOpacity>
            </Component>
          </AnimatedComponent>,
        ],
        "style": Object {
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Component
              style={
                Object {
                  "marginTop": 120,
                }
              }
            >
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
              >
                <Deck
                  deckName="React"
                  deckSize={2}
                  imageURI={undefined}
                />
              </TouchableOpacity>
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
              >
                <Deck
                  deckName="JavaScript"
                  deckSize={1}
                  imageURI={undefined}
                />
              </TouchableOpacity>
            </Component>,
            "onScroll": [Function],
            "scrollEventThrottle": 16,
            "style": Object {
              "flex": 1,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <TouchableOpacity
                  activeOpacity={0.2}
                  onPress={[Function]}
                >
                  <Deck
                    deckName="React"
                    deckSize={2}
                    imageURI={undefined}
                  />
                </TouchableOpacity>,
                <TouchableOpacity
                  activeOpacity={0.2}
                  onPress={[Function]}
                >
                  <Deck
                    deckName="JavaScript"
                    deckSize={1}
                    imageURI={undefined}
                  />
                </TouchableOpacity>,
              ],
              "style": Object {
                "marginTop": 120,
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "React",
                "nodeType": "class",
                "props": Object {
                  "activeOpacity": 0.2,
                  "children": <Deck
                    deckName="React"
                    deckSize={2}
                    imageURI={undefined}
                  />,
                  "onPress": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": "React",
                  "nodeType": "function",
                  "props": Object {
                    "deckName": "React",
                    "deckSize": 2,
                    "imageURI": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "JavaScript",
                "nodeType": "class",
                "props": Object {
                  "activeOpacity": 0.2,
                  "children": <Deck
                    deckName="JavaScript"
                    deckSize={1}
                    imageURI={undefined}
                  />,
                  "onPress": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": "JavaScript",
                  "nodeType": "function",
                  "props": Object {
                    "deckName": "JavaScript",
                    "deckSize": 1,
                    "imageURI": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [MockFunction],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <AnimatedComponent
                source={1}
                style={
                  Array [
                    Object {
                      "height": 120,
                      "left": 0,
                      "position": "absolute",
                      "resizeMode": "cover",
                      "right": 0,
                      "top": 0,
                      "width": null,
                    },
                    Object {
                      "opacity": 1,
                      "transform": Array [
                        Object {
                          "translateY": 0,
                        },
                      ],
                    },
                  ]
                }
              />,
              <AnimatedComponent
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "height": 32,
                    "justifyContent": "center",
                    "left": 0,
                    "marginTop": 28,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <AnimatedComponent
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#fff",
                        "fontSize": 18,
                      },
                      Object {
                        "transform": Array [
                          Object {
                            "scale": 0,
                          },
                        ],
                      },
                    ]
                  }
                >
                  Home
                </AnimatedComponent>
              </AnimatedComponent>,
              <Component
                style={
                  Object {
                    "alignSelf": "flex-end",
                    "right": 10,
                    "top": 10,
                  }
                }
              >
                <TouchableOpacity
                  activeOpacity={0.2}
                  onPress={[Function]}
                >
                  <Icon
                    allowFontScaling={false}
                    color="#fff"
                    name="delete"
                    size={30}
                  />
                </TouchableOpacity>
              </Component>,
            ],
            "style": Array [
              Object {
                "backgroundColor": "#00A4D3",
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "height": 120,
              },
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "source": 1,
                "style": Array [
                  Object {
                    "height": 120,
                    "left": 0,
                    "position": "absolute",
                    "resizeMode": "cover",
                    "right": 0,
                    "top": 0,
                    "width": null,
                  },
                  Object {
                    "opacity": 1,
                    "transform": Array [
                      Object {
                        "translateY": 0,
                      },
                    ],
                  },
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <AnimatedComponent
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#fff",
                        "fontSize": 18,
                      },
                      Object {
                        "transform": Array [
                          Object {
                            "scale": 0,
                          },
                        ],
                      },
                    ]
                  }
                >
                  Home
                </AnimatedComponent>,
                "style": Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "height": 32,
                  "justifyContent": "center",
                  "left": 0,
                  "marginTop": 28,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Home",
                  "style": Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#fff",
                      "fontSize": 18,
                    },
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 0,
                        },
                      ],
                    },
                  ],
                },
                "ref": null,
                "rendered": "Home",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TouchableOpacity
                  activeOpacity={0.2}
                  onPress={[Function]}
                >
                  <Icon
                    allowFontScaling={false}
                    color="#fff"
                    name="delete"
                    size={30}
                  />
                </TouchableOpacity>,
                "style": Object {
                  "alignSelf": "flex-end",
                  "right": 10,
                  "top": 10,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activeOpacity": 0.2,
                  "children": <Icon
                    allowFontScaling={false}
                    color="#fff"
                    name="delete"
                    size={30}
                  />,
                  "onPress": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "allowFontScaling": false,
                    "color": "#fff",
                    "name": "delete",
                    "size": 30,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`[Component] DeckList shallow renders ConnectedDeckList correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DeckList
    decks={undefined}
    dispatch={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;

exports[`[Component] DeckList shallow renders Unconnected DeckList correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DeckList />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
