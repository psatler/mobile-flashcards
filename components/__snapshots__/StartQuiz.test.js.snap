// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Component] StartQuiz shallow renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <StartQuiz
    navigation={
      Object {
        "state": Object {
          "params": Object {
            "deck": Object {
              "questions": Array [
                Object {
                  "answer": "A library for managing user interfaces",
                  "question": "What is React?",
                },
                Object {
                  "answer": "The componentDidMount lifecycle event",
                  "question": "Where do you make Ajax requests in React?",
                },
              ],
              "title": "React",
            },
          },
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Component
          style={
            Object {
              "flexDirection": "row",
              "marginLeft": 10,
              "marginRight": 10,
              "marginTop": 5,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "flex": 0.5,
                "fontSize": 15,
                "fontWeight": "bold",
                "marginTop": 5,
              }
            }
          >
             
            1
             / 
            2
             
          </Text>
          <Component
            style={
              Object {
                "flex": 2,
              }
            }
          >
            <ProgressBar
              animated={true}
              animationConfig={
                Object {
                  "bounciness": 0,
                }
              }
              animationType="spring"
              borderRadius={4}
              borderWidth={1}
              color="#00A4D3"
              height={6}
              indeterminate={false}
              progress={0.5}
              style={
                Object {
                  "marginTop": 10,
                }
              }
              useNativeDriver={false}
              width={null}
            />
          </Component>
        </Component>,
        <Component
          style={
            Object {
              "flex": 1,
              "margin": 5,
              "marginBottom": 25,
            }
          }
        >
          <FlipCardAnimation
            answerText="A library for managing user interfaces"
            questionText="What is React?"
            showFront={true}
          />
        </Component>,
        <TouchableOpacity
          activeOpacity={0.2}
          onPress={[Function]}
          style={
            Object {
              "alignSelf": "center",
              "backgroundColor": "#fff",
              "borderColor": "#4e4cb8",
              "borderRadius": 16,
              "borderWidth": 1,
              "padding": 10,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#4e4cb8",
                "fontSize": 15,
              }
            }
          >
             See Answer 
          </Text>
        </TouchableOpacity>,
        <Component
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-around",
            }
          }
        >
          <TouchableOpacity
            activeOpacity={0.2}
            disabled={true}
            onPress={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 16,
                  "marginBottom": 25,
                  "marginTop": 25,
                  "padding": 10,
                },
                Object {
                  "backgroundColor": "#757575",
                },
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#fff",
                  "fontSize": 15,
                  "padding": 3,
                }
              }
            >
               Incorrect 
            </Text>
          </TouchableOpacity>
          <TouchableOpacity
            activeOpacity={0.2}
            disabled={true}
            onPress={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 16,
                  "marginBottom": 25,
                  "marginTop": 25,
                  "padding": 10,
                },
                Object {
                  "backgroundColor": "#757575",
                },
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#fff",
                  "fontSize": 15,
                  "padding": 3,
                }
              }
            >
               Correct 
            </Text>
          </TouchableOpacity>
        </Component>,
      ],
      "style": Object {
        "flex": 1,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "flex": 0.5,
                  "fontSize": 15,
                  "fontWeight": "bold",
                  "marginTop": 5,
                }
              }
            >
               
              1
               / 
              2
               
            </Text>,
            <Component
              style={
                Object {
                  "flex": 2,
                }
              }
            >
              <ProgressBar
                animated={true}
                animationConfig={
                  Object {
                    "bounciness": 0,
                  }
                }
                animationType="spring"
                borderRadius={4}
                borderWidth={1}
                color="#00A4D3"
                height={6}
                indeterminate={false}
                progress={0.5}
                style={
                  Object {
                    "marginTop": 10,
                  }
                }
                useNativeDriver={false}
                width={null}
              />
            </Component>,
          ],
          "style": Object {
            "flexDirection": "row",
            "marginLeft": 10,
            "marginRight": 10,
            "marginTop": 5,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": Array [
                " ",
                1,
                " / ",
                2,
                " ",
              ],
              "ellipsizeMode": "tail",
              "style": Object {
                "flex": 0.5,
                "fontSize": 15,
                "fontWeight": "bold",
                "marginTop": 5,
              },
            },
            "ref": null,
            "rendered": Array [
              " ",
              1,
              " / ",
              2,
              " ",
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <ProgressBar
                animated={true}
                animationConfig={
                  Object {
                    "bounciness": 0,
                  }
                }
                animationType="spring"
                borderRadius={4}
                borderWidth={1}
                color="#00A4D3"
                height={6}
                indeterminate={false}
                progress={0.5}
                style={
                  Object {
                    "marginTop": 10,
                  }
                }
                useNativeDriver={false}
                width={null}
              />,
              "style": Object {
                "flex": 2,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "animated": true,
                "animationConfig": Object {
                  "bounciness": 0,
                },
                "animationType": "spring",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#00A4D3",
                "height": 6,
                "indeterminate": false,
                "progress": 0.5,
                "style": Object {
                  "marginTop": 10,
                },
                "useNativeDriver": false,
                "width": null,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <FlipCardAnimation
            answerText="A library for managing user interfaces"
            questionText="What is React?"
            showFront={true}
          />,
          "style": Object {
            "flex": 1,
            "margin": 5,
            "marginBottom": 25,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "answerText": "A library for managing user interfaces",
            "questionText": "What is React?",
            "showFront": true,
          },
          "ref": "child",
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeOpacity": 0.2,
          "children": <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#4e4cb8",
                "fontSize": 15,
              }
            }
          >
             See Answer 
          </Text>,
          "onPress": [Function],
          "style": Object {
            "alignSelf": "center",
            "backgroundColor": "#fff",
            "borderColor": "#4e4cb8",
            "borderRadius": 16,
            "borderWidth": 1,
            "padding": 10,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": " See Answer ",
            "ellipsizeMode": "tail",
            "style": Object {
              "color": "#4e4cb8",
              "fontSize": 15,
            },
          },
          "ref": null,
          "rendered": " See Answer ",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <TouchableOpacity
              activeOpacity={0.2}
              disabled={true}
              onPress={[Function]}
              style={
                Array [
                  Object {
                    "borderRadius": 16,
                    "marginBottom": 25,
                    "marginTop": 25,
                    "padding": 10,
                  },
                  Object {
                    "backgroundColor": "#757575",
                  },
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 15,
                    "padding": 3,
                  }
                }
              >
                 Incorrect 
              </Text>
            </TouchableOpacity>,
            <TouchableOpacity
              activeOpacity={0.2}
              disabled={true}
              onPress={[Function]}
              style={
                Array [
                  Object {
                    "borderRadius": 16,
                    "marginBottom": 25,
                    "marginTop": 25,
                    "padding": 10,
                  },
                  Object {
                    "backgroundColor": "#757575",
                  },
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 15,
                    "padding": 3,
                  }
                }
              >
                 Correct 
              </Text>
            </TouchableOpacity>,
          ],
          "style": Object {
            "flexDirection": "row",
            "justifyContent": "space-around",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeOpacity": 0.2,
              "children": <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 15,
                    "padding": 3,
                  }
                }
              >
                 Incorrect 
              </Text>,
              "disabled": true,
              "onPress": [Function],
              "style": Array [
                Object {
                  "borderRadius": 16,
                  "marginBottom": 25,
                  "marginTop": 25,
                  "padding": 10,
                },
                Object {
                  "backgroundColor": "#757575",
                },
              ],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "accessible": true,
                "allowFontScaling": true,
                "children": " Incorrect ",
                "ellipsizeMode": "tail",
                "style": Object {
                  "color": "#fff",
                  "fontSize": 15,
                  "padding": 3,
                },
              },
              "ref": null,
              "rendered": " Incorrect ",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeOpacity": 0.2,
              "children": <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 15,
                    "padding": 3,
                  }
                }
              >
                 Correct 
              </Text>,
              "disabled": true,
              "onPress": [Function],
              "style": Array [
                Object {
                  "borderRadius": 16,
                  "marginBottom": 25,
                  "marginTop": 25,
                  "padding": 10,
                },
                Object {
                  "backgroundColor": "#757575",
                },
              ],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "accessible": true,
                "allowFontScaling": true,
                "children": " Correct ",
                "ellipsizeMode": "tail",
                "style": Object {
                  "color": "#fff",
                  "fontSize": 15,
                  "padding": 3,
                },
              },
              "ref": null,
              "rendered": " Correct ",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Component
            style={
              Object {
                "flexDirection": "row",
                "marginLeft": 10,
                "marginRight": 10,
                "marginTop": 5,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "flex": 0.5,
                  "fontSize": 15,
                  "fontWeight": "bold",
                  "marginTop": 5,
                }
              }
            >
               
              1
               / 
              2
               
            </Text>
            <Component
              style={
                Object {
                  "flex": 2,
                }
              }
            >
              <ProgressBar
                animated={true}
                animationConfig={
                  Object {
                    "bounciness": 0,
                  }
                }
                animationType="spring"
                borderRadius={4}
                borderWidth={1}
                color="#00A4D3"
                height={6}
                indeterminate={false}
                progress={0.5}
                style={
                  Object {
                    "marginTop": 10,
                  }
                }
                useNativeDriver={false}
                width={null}
              />
            </Component>
          </Component>,
          <Component
            style={
              Object {
                "flex": 1,
                "margin": 5,
                "marginBottom": 25,
              }
            }
          >
            <FlipCardAnimation
              answerText="A library for managing user interfaces"
              questionText="What is React?"
              showFront={true}
            />
          </Component>,
          <TouchableOpacity
            activeOpacity={0.2}
            onPress={[Function]}
            style={
              Object {
                "alignSelf": "center",
                "backgroundColor": "#fff",
                "borderColor": "#4e4cb8",
                "borderRadius": 16,
                "borderWidth": 1,
                "padding": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#4e4cb8",
                  "fontSize": 15,
                }
              }
            >
               See Answer 
            </Text>
          </TouchableOpacity>,
          <Component
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-around",
              }
            }
          >
            <TouchableOpacity
              activeOpacity={0.2}
              disabled={true}
              onPress={[Function]}
              style={
                Array [
                  Object {
                    "borderRadius": 16,
                    "marginBottom": 25,
                    "marginTop": 25,
                    "padding": 10,
                  },
                  Object {
                    "backgroundColor": "#757575",
                  },
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 15,
                    "padding": 3,
                  }
                }
              >
                 Incorrect 
              </Text>
            </TouchableOpacity>
            <TouchableOpacity
              activeOpacity={0.2}
              disabled={true}
              onPress={[Function]}
              style={
                Array [
                  Object {
                    "borderRadius": 16,
                    "marginBottom": 25,
                    "marginTop": 25,
                    "padding": 10,
                  },
                  Object {
                    "backgroundColor": "#757575",
                  },
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 15,
                    "padding": 3,
                  }
                }
              >
                 Correct 
              </Text>
            </TouchableOpacity>
          </Component>,
        ],
        "style": Object {
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "flex": 0.5,
                    "fontSize": 15,
                    "fontWeight": "bold",
                    "marginTop": 5,
                  }
                }
              >
                 
                1
                 / 
                2
                 
              </Text>,
              <Component
                style={
                  Object {
                    "flex": 2,
                  }
                }
              >
                <ProgressBar
                  animated={true}
                  animationConfig={
                    Object {
                      "bounciness": 0,
                    }
                  }
                  animationType="spring"
                  borderRadius={4}
                  borderWidth={1}
                  color="#00A4D3"
                  height={6}
                  indeterminate={false}
                  progress={0.5}
                  style={
                    Object {
                      "marginTop": 10,
                    }
                  }
                  useNativeDriver={false}
                  width={null}
                />
              </Component>,
            ],
            "style": Object {
              "flexDirection": "row",
              "marginLeft": 10,
              "marginRight": 10,
              "marginTop": 5,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "accessible": true,
                "allowFontScaling": true,
                "children": Array [
                  " ",
                  1,
                  " / ",
                  2,
                  " ",
                ],
                "ellipsizeMode": "tail",
                "style": Object {
                  "flex": 0.5,
                  "fontSize": 15,
                  "fontWeight": "bold",
                  "marginTop": 5,
                },
              },
              "ref": null,
              "rendered": Array [
                " ",
                1,
                " / ",
                2,
                " ",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <ProgressBar
                  animated={true}
                  animationConfig={
                    Object {
                      "bounciness": 0,
                    }
                  }
                  animationType="spring"
                  borderRadius={4}
                  borderWidth={1}
                  color="#00A4D3"
                  height={6}
                  indeterminate={false}
                  progress={0.5}
                  style={
                    Object {
                      "marginTop": 10,
                    }
                  }
                  useNativeDriver={false}
                  width={null}
                />,
                "style": Object {
                  "flex": 2,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "animated": true,
                  "animationConfig": Object {
                    "bounciness": 0,
                  },
                  "animationType": "spring",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "color": "#00A4D3",
                  "height": 6,
                  "indeterminate": false,
                  "progress": 0.5,
                  "style": Object {
                    "marginTop": 10,
                  },
                  "useNativeDriver": false,
                  "width": null,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <FlipCardAnimation
              answerText="A library for managing user interfaces"
              questionText="What is React?"
              showFront={true}
            />,
            "style": Object {
              "flex": 1,
              "margin": 5,
              "marginBottom": 25,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "answerText": "A library for managing user interfaces",
              "questionText": "What is React?",
              "showFront": true,
            },
            "ref": "child",
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.2,
            "children": <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#4e4cb8",
                  "fontSize": 15,
                }
              }
            >
               See Answer 
            </Text>,
            "onPress": [Function],
            "style": Object {
              "alignSelf": "center",
              "backgroundColor": "#fff",
              "borderColor": "#4e4cb8",
              "borderRadius": 16,
              "borderWidth": 1,
              "padding": 10,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": " See Answer ",
              "ellipsizeMode": "tail",
              "style": Object {
                "color": "#4e4cb8",
                "fontSize": 15,
              },
            },
            "ref": null,
            "rendered": " See Answer ",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <TouchableOpacity
                activeOpacity={0.2}
                disabled={true}
                onPress={[Function]}
                style={
                  Array [
                    Object {
                      "borderRadius": 16,
                      "marginBottom": 25,
                      "marginTop": 25,
                      "padding": 10,
                    },
                    Object {
                      "backgroundColor": "#757575",
                    },
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#fff",
                      "fontSize": 15,
                      "padding": 3,
                    }
                  }
                >
                   Incorrect 
                </Text>
              </TouchableOpacity>,
              <TouchableOpacity
                activeOpacity={0.2}
                disabled={true}
                onPress={[Function]}
                style={
                  Array [
                    Object {
                      "borderRadius": 16,
                      "marginBottom": 25,
                      "marginTop": 25,
                      "padding": 10,
                    },
                    Object {
                      "backgroundColor": "#757575",
                    },
                  ]
                }
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#fff",
                      "fontSize": 15,
                      "padding": 3,
                    }
                  }
                >
                   Correct 
                </Text>
              </TouchableOpacity>,
            ],
            "style": Object {
              "flexDirection": "row",
              "justifyContent": "space-around",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "activeOpacity": 0.2,
                "children": <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#fff",
                      "fontSize": 15,
                      "padding": 3,
                    }
                  }
                >
                   Incorrect 
                </Text>,
                "disabled": true,
                "onPress": [Function],
                "style": Array [
                  Object {
                    "borderRadius": 16,
                    "marginBottom": 25,
                    "marginTop": 25,
                    "padding": 10,
                  },
                  Object {
                    "backgroundColor": "#757575",
                  },
                ],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "accessible": true,
                  "allowFontScaling": true,
                  "children": " Incorrect ",
                  "ellipsizeMode": "tail",
                  "style": Object {
                    "color": "#fff",
                    "fontSize": 15,
                    "padding": 3,
                  },
                },
                "ref": null,
                "rendered": " Incorrect ",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "activeOpacity": 0.2,
                "children": <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#fff",
                      "fontSize": 15,
                      "padding": 3,
                    }
                  }
                >
                   Correct 
                </Text>,
                "disabled": true,
                "onPress": [Function],
                "style": Array [
                  Object {
                    "borderRadius": 16,
                    "marginBottom": 25,
                    "marginTop": 25,
                    "padding": 10,
                  },
                  Object {
                    "backgroundColor": "#757575",
                  },
                ],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "accessible": true,
                  "allowFontScaling": true,
                  "children": " Correct ",
                  "ellipsizeMode": "tail",
                  "style": Object {
                    "color": "#fff",
                    "fontSize": 15,
                    "padding": 3,
                  },
                },
                "ref": null,
                "rendered": " Correct ",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`[Component] StartQuiz should display the final result message 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <StartQuiz
    navigation={
      Object {
        "state": Object {
          "params": Object {
            "deck": Object {
              "questions": Array [],
              "title": "React",
            },
          },
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "restartFunc": [Function],
      "score": 0,
      "singleDeck": Object {
        "questions": Array [],
        "title": "React",
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "restartFunc": [Function],
        "score": 0,
        "singleDeck": Object {
          "questions": Array [],
          "title": "React",
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`[Component] StartQuiz should return there is no cards message 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <StartQuiz
    navigation={
      Object {
        "state": Object {
          "params": Object {
            "deck": Object {
              "questions": Array [],
              "title": "React",
            },
          },
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "restartFunc": [Function],
      "score": 0,
      "singleDeck": Object {
        "questions": Array [],
        "title": "React",
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "restartFunc": [Function],
        "score": 0,
        "singleDeck": Object {
          "questions": Array [],
          "title": "React",
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
